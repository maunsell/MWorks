MEM_MODEL=simple
OS_TYPE=unix
STREAMS=file tcpip
ENCODERS=ldo

CC=gcc
CFLAGS=-g -I. -DLINUX -I$(INSTALL_DIR)/include -fPIC

AR=ar

LIBS=-lm

ENCODERS:=$(for i in "$(ENCODERS)"; do echo encoding_$i.o; done)
STREAMS:=$(for i in "$(STREAMS)"; do echo stream_$i.o; done)

HEADERS=\
	encoding_ldo.h \
	scarab.h \
	scarab_datatypes.h \
	scarab_dict.h \
	scarab_list.h \
	scarab_mem.h \
	scarab_os.h \
	scarab_utilities.h

OBJS=\
	os_$(OS_TYPE).o \
	mem_$(MEM_MODEL).o \
	comp.o \
	data.o \
	hashtable.o \
	list.o \
	session.o \
	encoding_ldo.o \
	scarab_utilities.o \
	stream_file.o \
	stream_tcpip.o \
	stream_tcpip_select.o \
	stream_tcpip_buffered.o

.c.o: install-headers
	$(CC) $(CFLAGS) -c $<

all: libscarab.a

install: libscarab.a install-headers
	cp libscarab.a $(INSTALL_DIR)/lib

libscarab.a: $(OBJS) 
	$(AR) cr libscarab.a $(OBJS)

install-headers: $(HEADERS) FORCE
	rm -rf $(INSTALL_DIR)/include/Scarab
	mkdir -p $(INSTALL_DIR)/include/Scarab
	cp -f *.h $(INSTALL_DIR)/include/Scarab	

clean:
	rm -f $(INSTALL_DIR)/lib/libscarab.a
	rm -rf $(INSTALL_DIR)/include/Scarab
	rm -f *~
	rm -f *.o
	rm -f libscarab.a

FORCE:

####################################################

# Generic Library
comp.o: comp.c $(HEADERS) install-headers
data.o: data.c $(HEADERS) install-headers
hashtable.o: hashtable.c $(HEADERS) install-headers
list.o: list.c $(HEADERS) install-headers
session.o: session.c $(HEADERS) install-headers

# Encoders
encoding_ldo.o: encoding_ldo.c encoding_ldo.h $(HEADERS) install-headers

# Operating Systems
os_unix.o: os_unix.c $(HEADERS) install-headers

# Memory Models
mem_simple.o: mem_simple.c $(HEADERS) install-headers

# Streams
stream_file.o: stream_file.c $(HEADERS) install-headers
stream_tcpip.o: stream_tcpip.c $(HEADERS) install-headers
stream_tcpip_select.o: stream_tcpip_select.c $(HEADERS) install-headers
stream_tcpip_buffered.o: stream_tcpip_buffered.c $(HEADERS) install-headers
